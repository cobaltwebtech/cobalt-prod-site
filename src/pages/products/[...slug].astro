---
import MainLayout from "@/layouts/MainLayout.astro";
import { Icon } from "astro-icon/components";
import { Button } from "@/components/starwind/button";
import { Image } from "astro:assets";
import { getCollection, type CollectionEntry } from "astro:content";
import { siteMeta } from "@/lib/siteData";
import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbList,
  BreadcrumbPage,
  BreadcrumbSeparator,
} from "@/components/starwind/breadcrumb";
import {
  Tabs,
  TabsList,
  TabsTrigger,
  TabsContent,
} from "@/components/starwind/tabs";

// Define the Product and ProductData types directly in this file
interface Product {
  slug: string;
  data: ProductData;
}

interface ProductData {
  title: string;
  subHeading: string;
  main: {
    description1: string;
    description2: string;
    imgMain: ImageMetadata;
    imgAlt: string;
  };
  tabs: {
    title1: string;
    title2: string;
  };
  tabFirst: {
    title: string;
    subTitle: string;
    ctaDescription: string;
    btnTitle: string;
    btnURL: string;
  };
  tabFirstItems: ListItem[];
  tabSecond: {
    title: string;
    subTitle: string;
    ctaDescription: string;
    btnTitle: string;
    btnURL: string;
  };
  tabSecondItems: ListItem[];
}

interface ListItem {
  title: string;
  subTitle: string;
}

// This gets the static paths for all the unique products
export async function getStaticPaths() {
  const productEntries = await getCollection("products");
  return productEntries.map((product: CollectionEntry<"products">) => ({
    params: { slug: product.slug },
    props: { product: product as Product },
  }));
}

const { product } = Astro.props as { product: Product };

const pageTitle: string = `${product.data.title} | ${siteMeta.title}`;
---

<MainLayout title={pageTitle}>
  <div id="overlay" class="dark:bg-cobalt-950 fixed inset-0 bg-slate-100"></div>

  <section class="py-8 md:py-12">
    <div
      class="flex flex-col justify-between gap-8 space-y-4 sm:space-y-0 md:flex-row"
    >
      <div id="fadeInUp" class="w-[600px] max-w-full">
        <Breadcrumb class="mb-4">
          <BreadcrumbList>
            <BreadcrumbItem>
              <BreadcrumbLink href="/">Home</BreadcrumbLink>
            </BreadcrumbItem>
            <BreadcrumbSeparator />
            <BreadcrumbItem>
              <BreadcrumbLink href="/products/">Products</BreadcrumbLink>
            </BreadcrumbItem>
            <BreadcrumbSeparator />
            <BreadcrumbItem>
              <BreadcrumbPage>{product.data.title}</BreadcrumbPage>
            </BreadcrumbItem>
          </BreadcrumbList>
        </Breadcrumb>
        <h1
          class="block text-3xl font-bold text-slate-800 sm:text-5xl md:text-6xl lg:text-7xl dark:text-slate-200"
        >
          {product.data.title}
        </h1>
        <p class="my-4 text-xl font-bold text-cyan-700 dark:text-cyan-400">
          {product.data.subHeading}
        </p>
        <p
          id="fadeText"
          class="mb-8 max-w-prose font-light text-pretty text-slate-700 sm:text-xl dark:text-slate-300"
        >
          {product.data.main.description1}
        </p>
        <p
          id="fadeText"
          class="mb-8 max-w-prose font-light text-pretty text-slate-700 sm:text-xl dark:text-slate-300"
        >
          {product.data.main.description2}
        </p>
      </div>
      <div>
        <Image
          id="fadeInMoveRight"
          src={product.data.main.imgMain}
          class="w-[600px] rounded-xl"
          alt={product.data.main.imgAlt}
          format="avif"
          loading="eager"
          width="600"
          height="600"
        />
      </div>
    </div>
  </section>

  <section class="mx-auto max-w-screen-xl">
    <Tabs defaultValue="title1">
      <TabsList class="mx-auto max-w-3xl">
        <TabsTrigger value="title1">{product.data.tabs.title1}</TabsTrigger>
        <TabsTrigger value="title2">{product.data.tabs.title2}</TabsTrigger>
      </TabsList>
      <TabsContent value="title1">
        <div class="grid gap-12 md:grid-cols-2">
          <div class="lg:w-3/4">
            <h2
              class="text-3xl font-bold text-balance text-slate-800 md:leading-tight lg:text-4xl dark:text-slate-200"
            >
              {product.data.tabFirst.title}
            </h2>
            <p class="mt-3 text-pretty text-slate-600 dark:text-slate-400">
              {product.data.tabFirst.subTitle}
            </p>
            <p class="mt-5 text-xl font-bold text-cyan-600 dark:text-cyan-400">
              {product.data.tabFirst.ctaDescription}
            </p>
            <p class="mt-5">
              <Button variant="info" href={product.data.tabFirst.btnURL}
                ><Icon name="InfoFill" />{
                  product.data.tabFirst.btnTitle
                }</Button
              >
            </p>
          </div>

          <div class="space-y-6 lg:space-y-10">
            {
              product.data.tabFirstItems.map((list) => (
                <div class="flex">
                  <div>
                    <h3 class="text-base font-bold text-slate-800 sm:text-lg dark:text-slate-200">
                      {list.title}
                    </h3>
                    <p class="mt-1 text-slate-600 dark:text-slate-400">
                      {list.subTitle}
                    </p>
                  </div>
                </div>
              ))
            }
          </div>
        </div>
      </TabsContent>
      <TabsContent value="title2">
        <div class="grid gap-12 md:grid-cols-2">
          <div class="lg:w-3/4">
            <h3
              class="text-3xl font-bold text-balance text-slate-800 md:leading-tight lg:text-4xl dark:text-slate-200"
            >
              {product.data.tabSecond.title}
            </h3>
            <p class="mt-3 text-pretty text-slate-600 dark:text-slate-400">
              {product.data.tabSecond.subTitle}
            </p>
            <p class="mt-5 text-xl font-bold text-cyan-600 dark:text-cyan-400">
              {product.data.tabSecond.ctaDescription}
            </p>
            <p class="mt-5">
              <Button variant="info" href={product.data.tabSecond.btnURL}
                ><Icon name="InfoFill" />{
                  product.data.tabSecond.btnTitle
                }</Button
              >
            </p>
          </div>
          <div class="space-y-6 lg:space-y-10">
            {
              product.data.tabSecondItems.map((list) => (
                <div class="flex">
                  <div>
                    <h3 class="text-base font-bold text-slate-800 sm:text-lg dark:text-slate-200">
                      {list.title}
                    </h3>
                    <p class="mt-1 text-slate-600 dark:text-slate-400">
                      {list.subTitle}
                    </p>
                  </div>
                </div>
              ))
            }
          </div>
        </div>
      </TabsContent>
    </Tabs>
  </section>
</MainLayout>

<script>
  import { gsap } from "gsap";

  document.addEventListener("astro:page-load", function () {
    // Ensure scroll position is at the top
    window.scrollTo(0, 0);

    type AnimationSettings = {
      autoAlpha?: number;
      y?: number;
      x?: number;
      willChange?: string;
    };

    function setElementAnimationDefaults(
      id: string,
      settings: AnimationSettings,
    ) {
      gsap.set(id, settings);
    }

    setElementAnimationDefaults("#fadeText", {
      autoAlpha: 0,
      y: 50,
      willChange: "transform, opacity",
    });

    setElementAnimationDefaults("#fadeInUp", {
      autoAlpha: 0,
      y: 50,
      willChange: "transform, opacity",
    });

    setElementAnimationDefaults("#fadeInMoveRight", {
      autoAlpha: 0,
      x: 300,
      willChange: "transform, opacity",
    });

    let timeline = gsap.timeline({
      defaults: { overwrite: "auto" },
    });

    timeline.to("#fadeText", {
      duration: 0.25,
      autoAlpha: 1,
      y: 0,
      delay: 0.25,
      ease: "power2.out",
    });

    timeline.to(
      "#fadeInUp",
      {
        duration: 1,
        autoAlpha: 1,
        y: 0,
        ease: "power2.out",
      },
      "-=0.5",
    );

    timeline.to(
      "#fadeInMoveRight",
      {
        duration: 1,
        autoAlpha: 1,
        x: 0,
        ease: "power2.inOut",
      },
      "-=0.75",
    );

    timeline.to("#overlay", {
      duration: 1,
      autoAlpha: 0,
      delay: 0.2,
    });
  });
</script>
