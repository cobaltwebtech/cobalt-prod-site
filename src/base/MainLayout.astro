---

import "@/styles/global.css";
import { ClientRouter, fade } from "astro:transitions";
import { join } from "node:path";
import { AstroFont } from "astro-font";
import Analytics from "@/base/Analytics.astro";
import Meta from "@/base/Meta.astro";
import Footer from "@/components/sections/navigation/Footer.astro";
import Navbar from "@/components/sections/navigation/Navbar.astro";
import Breakpoints from "@/components/ui/Breakpoints.astro";
import { siteMeta } from "@/lib/siteData";

// Setting expected props
const {
  title = siteMeta.title,
  meta,
  structuredData,
  externalScript,
  scriptUrl,
  lang = "en",
} = Astro.props;

// Interface to type-check the properties
interface Props {
  title?: string;
  meta?: string;
  structuredData?: object;
  lang?: string;
  externalScript?: boolean;
  scriptUrl?: string;
}
---

<!doctype html>
<html lang={lang} class="scrollbar-hide lenis lenis-smooth">
  <head>
    <!-- Define the title of the page -->
    <title>{title}</title>
    <!-- Adding metadata to the HTML document -->
    <Meta meta={meta} structuredData={structuredData} />
    <!-- Load fonts -->
    <AstroFont
      config={[
        {
          preload: true,
          display: "swap",
          name: "Proxima Nova",
          fallback: "sans-serif",
          src: [
            {
              weight: "400",
              style: "normal",
              path: join(
                process.cwd(),
                "public",
                "fonts",
                "ProximaNova-Regular.woff2",
              ),
            },
            {
              weight: "700",
              style: "normal",
              path: join(
                process.cwd(),
                "public",
                "fonts",
                "ProximaNova-Bold.woff2",
              ),
            },
            {
              weight: "800",
              style: "normal",
              path: join(
                process.cwd(),
                "public",
                "fonts",
                "ProximaNova-ExtraBold.woff2",
              ),
            },
          ],
        },
      ]}
    />

    <!-- Script to handle dark mode sets localstorage to save preference and checks the devices preference -->
    <script is:inline>
      // Wrap in IIFE to avoid variable redeclaration on View Transitions
      (() => {
        // Initial page load theme setting
        const getThemePreference = () => {
          if (
            typeof localStorage !== "undefined" &&
            localStorage.getItem("theme")
          ) {
            return localStorage.getItem("theme");
          }
          return window.matchMedia("(prefers-color-scheme: dark)").matches
            ? "dark"
            : "light";
        };

        // Set theme immediately on page load
        const theme = getThemePreference();
        document.documentElement.classList.toggle("dark", theme === "dark");

        // Also handle theme during View Transitions
        document.addEventListener("astro:page-load", () => {
          const currentTheme = getThemePreference();
          document.documentElement.classList.toggle(
            "dark",
            currentTheme === "dark",
          );
        });
      })();
    </script>
    <!--Import Lenis smooth scroll script -->
    <script>
      import Lenis from "lenis";

      const lenis = new Lenis();
      function raf(time: number): void {
        lenis.raf(time);
        requestAnimationFrame(raf);
      }
      requestAnimationFrame(raf);
    </script>
    <!-- Pass in conditional script if needed on pages where the prop externalScript={true} -->
    {externalScript && <script is:inline src={scriptUrl} async defer />}
    <!-- Analytics Component (only renders in production) -->
    <Analytics />
    <!-- View Transitions enabled  -->
    <ClientRouter fallback="swap" />
  </head>
  <body
    class="dark:bg-cobalt-950 flex min-h-svh flex-col bg-slate-200 selection:bg-cyan-200 dark:selection:bg-cyan-700"
  >
    <Navbar />
    <main
      transition:animate={fade({ duration: "0.75s" })}
      class="mx-auto flex max-w-screen-2xl flex-auto flex-col justify-center px-6 py-8 md:px-8 md:py-10 lg:px-16 lg:py-12"
    >
      <slot />
    </main>
    <Footer />
    <Breakpoints />
    <!-- Import Preline UI with View Transition support -->
    <script>
      // Optimize Preline initialization only for elements that need it
      document.addEventListener("astro:page-load", async () => {
        //
        if (document.querySelector("[data-hs-collapse]")) {
          const preline = await import("preline/dist/preline.js");
          preline.HSStaticMethods.autoInit();
        }
      });
    </script>
  </body>
</html>
