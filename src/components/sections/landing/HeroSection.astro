---
// Import the necessary dependencies
import { Image } from "astro:assets";
import PrimaryCTA from "@/components/ui/buttons/PrimaryCTA.astro";
import SecondaryCTA from "@/components/ui/buttons/SecondaryCTA.astro";

// Define props from Astro
const {
  title,
  subTitle,
  paragraph1,
  paragraph2,
  primaryBtn,
  primaryBtnURL,
  secondaryBtn,
  secondaryBtnURL,
  src,
  alt,
} = Astro.props;

// Define TypeScript interface for props
interface Props {
  title: string;
  subTitle?: string;
  paragraph1?: string;
  paragraph2?: string;
  primaryBtn?: string;
  primaryBtnURL?: string;
  secondaryBtn?: string;
  secondaryBtnURL?: string;
  src?: any;
  alt?: string;
}
---

<!-- Defining a grid container that holds all the content -->
<section
  class="mx-auto mt-10 grid max-w-[85rem] gap-4 px-4 py-10 sm:px-6 sm:py-16 md:grid-cols-2 md:items-center md:gap-8 lg:px-8 lg:py-14 2xl:max-w-full"
>
  <!-- Title and description -->
  <div class="text-slate-800 dark:text-slate-200">
    <!-- Each h1 and p tag renders a portion of the title and subTitle defined above -->
    <h1
      class="mb-6 block text-3xl font-bold tracking-tight text-balance sm:text-4xl lg:text-5xl lg:leading-tight"
    >
      <!-- About Fragment: https://docs.astro.build/en/basics/astro-syntax/#fragments -->
      <Fragment set:html={title} />
    </h1>
    {
      subTitle && (
        <p class="mb-4 text-xl leading-relaxed text-pretty text-cyan-700 italic lg:w-4/5 dark:text-cyan-300">
          {subTitle}
        </p>
      )
    }
    <p class="text-l mb-4 leading-relaxed text-pretty lg:w-4/5">
      <Fragment set:html={paragraph1} />
    </p>
    <p class="text-l mb-4 leading-relaxed text-pretty lg:w-4/5">
      <Fragment set:html={paragraph2} />
    </p>

    <!-- Action Button Section: This section includes two CTAs with their own styles and URL -->
    <div class="mt-7 grid w-full gap-3 sm:inline-flex">
      {primaryBtn && <PrimaryCTA title={primaryBtn} url={primaryBtnURL} />}
      {
        secondaryBtn && (
          <SecondaryCTA title={secondaryBtn} url={secondaryBtnURL} />
        )
      }
    </div>
  </div>
  <!-- Hero Image Section -->
  <div class="flex w-full">
    <div class="top-12 overflow-hidden rounded-2xl">
      {
        src && alt && (
          <Image
            src={src}
            alt={alt}
            class="h-full w-full scale-110 object-cover object-center"
            draggable={"false"}
            loading={"eager"}
            format={"avif"}
          />
        )
      }
    </div>
  </div>
</section>
