---
// Import the necessary dependencies
import { Image } from "astro:assets";
import IconBlock from "@/components/ui/blocks/IconBlock.astro";
import { Icon } from "astro-icon/components";
import { Button } from "@/components/starwind/button";

interface Feature {
  heading: string;
  content: string;
  svg: string;
}

interface Props {
  title?: string;
  subTitle?: string;
  features?: Feature[];
  source?: ImageMetadata;
  alt?: string;
  primaryBtn?: string;
  primaryBtnURL?: string;
}
// Define props from Astro
const { title, subTitle, source, alt, features, primaryBtn, primaryBtnURL } =
  Astro.props;
---

<section class="py-8">
  <!-- Block to display the feature image -->
  <div class="mx-auto mb-6 overflow-hidden rounded-2xl md:mb-8 md:w-3/4">
    {
      source && alt && (
        <Image
          src={source}
          alt={alt}
          class="h-full w-full object-cover object-center"
          format="avif"
        />
      )
    }
  </div>

  <!-- Displaying the main content consisting of title, subtitle, and several `IconBlock` components -->
  <div class="mt-5 grid gap-8 lg:mt-16 lg:grid-cols-3 lg:gap-12">
    <!-- Block for title and subtitle -->
    <div class="lg:col-span-1">
      <!-- Rendering title -->
      <h2
        class="text-2xl font-bold text-balance text-slate-800 md:text-3xl dark:text-cyan-300"
      >
        {title}
      </h2>
      <!-- Rendering subtitle -->
      {
        subTitle && (
          <p class="my-4 text-pretty text-slate-600 md:mt-4 dark:text-slate-200">
            {subTitle}
          </p>
        )
      }
      <!-- Rendering CTA button -->
      {
        primaryBtn && (
          <div class="my-8">
            <Button href={primaryBtnURL}>
              <Icon name="InfoFill" class="size-6" />
              {primaryBtn}
            </Button>
          </div>
        )
      }
    </div>

    <!-- Block to display the IconBlock components -->
    <div class="lg:col-span-2">
      <div class="grid gap-8 sm:grid-cols-2 md:gap-12">
        <!-- Injecting IconBlock components with different properties -->
        {
          features &&
            features.map((feature) => (
              <IconBlock
                heading={feature.heading}
                content={feature.content}
                iconName={feature.svg}
              />
            ))
        }
      </div>
    </div>
  </div>
</section>
