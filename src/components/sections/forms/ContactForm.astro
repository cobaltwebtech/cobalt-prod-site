---
import AuthBtn from "@/components/ui/buttons/AuthBtn.astro";
import ContactIconBlock from "@/components/ui/blocks/ContactIconBlock.astro";
import TextInput from "@/components/ui/forms/input/TextInput.astro";
import EmailContactInput from "@/components/ui/forms/input/EmailContactInput.astro";
import PhoneInput from "@/components/ui/forms/input/PhoneInput.astro";
import TextAreaInput from "@/components/ui/forms/input/TextAreaInput.astro";
import { Icon } from "astro-icon/components";
import { z } from "astro:content";

const title: string = "Contact Us";
const subTitle: string =
  "Have questions or want to discuss a project? We would be thrilled to help you build your next web project or revamp your current one. Fill out the contact form below and our team will be in touch with you.";
const formTitle: string = "Fill the form below";

// Validate form inputs
const formSchema = z.object({
  firstname: z.string().min(1, "First name is required"),
  lastname: z.string().min(1, "Last name is required"),
  email: z.string().email("Invalid email address"),
  phone: z.string().optional(),
  message: z.string().min(1, "Message is required"),
  "cf-turnstile-response": z
    .string()
    .min(1, "CAPTCHA verification is required"),
});

const turnstileSiteKey = import.meta.env.TURNSTILE_PUBLIC_KEY;

let errorMessage: string | null = null;
let formData: z.infer<typeof formSchema> | null = null;

// Process form submission on server
if (Astro.request.method === "POST") {
  try {
    console.log("Form submitted");
    const data = await Astro.request.formData();
    const result = formSchema.safeParse(Object.fromEntries(data));

    if (!result.success) {
      console.log("Form validation failed", result.error.errors);
      errorMessage = "Please fill out all required fields correctly.";
    } else {
      console.log("Form validation successful", result.data);
      formData = result.data;
      const { "cf-turnstile-response": turnstileResponse, ...formFields } =
        formData;

      // Verify the Turnstile token
      const verificationResponse = await fetch(
        "https://challenges.cloudflare.com/turnstile/v0/siteverify",
        {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            secret: import.meta.env.TURNSTILE_SECRET_KEY,
            response: turnstileResponse,
          }),
        },
      );

      const verificationResult = await verificationResponse.json();

      if (!verificationResult.success) {
        console.log("Turnstile verification failed");
        errorMessage = "ERROR: CAPTCHA verification failed. Please try again.";
      } else {
        console.log("Turnstile verification successful, calling API route");
        // Proceed with form submission
        const apiResponse = await fetch(
          `${Astro.url.origin}/api/sendEmailContact`,
          {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(formFields),
          },
        );

        console.log("API route response status:", apiResponse.status);

        if (!apiResponse.ok) {
          const errorData = await apiResponse.json();
          throw new Error(
            errorData.error || `HTTP error! status: ${apiResponse.status}`,
          );
        } else {
          console.log("Email sent successfully");
        }
        // Redirect to the confirmation page
        return Astro.redirect("/contact/submission-received/", 302);
      }
    }
  } catch (e) {
    console.error(`Error: ${e instanceof Error ? e.message : String(e)}`);
    errorMessage = "ERROR: An unexpected error occurred. Please try again.";
  }
}
---

<!-- Contact Us -->
<section class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14">
  <div class="mx-auto max-w-2xl lg:max-w-5xl">
    <div class="text-center">
      <h1
        class="text-2xl font-bold tracking-tight text-balance text-slate-800 md:text-4xl md:leading-tight dark:text-slate-200"
      >
        {title}
      </h1>
      <p class="mt-1 text-pretty text-slate-600 dark:text-slate-400">
        {subTitle}
      </p>
      <p class="mt-3 text-center text-slate-600 dark:text-slate-400">
        If you are a current customer and have a support question or issue,
        please use the <a
          href="/support/"
          class="text-cyan-500 hover:text-orange-600 dark:text-cyan-400 dark:hover:text-orange-400"
          >Support Form</a
        >.
      </p>
    </div>

    <div class="mt-12 grid items-center gap-6 lg:grid-cols-2 lg:gap-16">
      <div class="flex flex-col rounded-xl p-4 sm:p-6 lg:p-8">
        <h2 class="mb-8 text-xl font-bold text-slate-700 dark:text-slate-300">
          {formTitle}
        </h2>

        <form id="contact-form" method="POST">
          <!-- Form fields -->
          <div class="grid gap-4">
            <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
              <TextInput
                id="firstname"
                label="First Name"
                inputName="firstname"
              />
              <TextInput id="lastname" label="Last Name" inputName="lastname" />
            </div>
            <EmailContactInput
              id="email"
              label="Email Address"
              inputName="email"
            />
            <PhoneInput id="phone" inputName="phone" />
            <TextAreaInput
              id="message"
              label="How can we help you?"
              name="message"
            />
          </div>
          <!-- Add Cloudflare Turnstile widget -->
          <div
            id="turnstile-widget"
            class="mt-4"
            data-sitekey={turnstileSiteKey}
            data-size="flexible"
          >
          </div>
          <p class="text-xs text-slate-600 dark:text-slate-400">
            We're just checking that you're a real human filling out this form.
            <br />Bad bots stay away!
          </p>
          <div
            id="error-message"
            class="text-cobalt-50 my-6 hidden animate-bounce rounded-lg border-4 border-orange-400 bg-orange-700 p-3 text-center font-bold"
          >
            {errorMessage}
          </div>
          <div class="mt-4 grid">
            <AuthBtn
              title="Send Contact Request"
              iconName="Send"
              iconClass="size-5"
            />
          </div>
        </form>
      </div>

      <!--ContactIconBlocks are used to display different methods of contacting, including visiting office, email, browsing knowledgebase, and FAQ.-->
      <div
        class="divide-y-2 divide-slate-300 text-slate-600 dark:divide-slate-600 dark:text-slate-50"
      >
        <ContactIconBlock
          heading="Hours of Operation"
          content="Monday - Friday, 9AM - 5PM (US Central)"
          isLinkVisible={false}
          ><Icon
            name="Clock"
            class="size-6 text-slate-600 dark:text-slate-200"
          />
        </ContactIconBlock>

        <ContactIconBlock
          heading="Live Chat"
          content="Contact us via live chat during our normal business hours."
          isLinkVisible={true}
          linkTitle="Start a chat session"
          linkURL="https://salesiq.zoho.com/signaturesupport.ls?widgetcode=b02c0667d93a35346839e5ab730f507af85d02062470316501c1c4d80b9136f1eae322a2a89cfbc9b10746de3549cb8f"
          isArrowVisible={true}
          ><Icon
            name="ChatFill"
            class="size-6 text-slate-600 dark:text-slate-200"
          />
        </ContactIconBlock>

        <ContactIconBlock
          heading="Call Us"
          content="Contact us via phone during our normal business hours."
          isLinkVisible={true}
          linkTitle="+1-512-294-1600"
          linkURL="tel:+15122941600"
          isArrowVisible={true}
          ><Icon
            name="Phone"
            class="size-6 text-slate-600 dark:text-slate-200"
          />
        </ContactIconBlock>

        <ContactIconBlock
          heading="Email Us"
          content="Send us an email."
          isLinkVisible={true}
          linkTitle="info@cobaltweb.tech"
          linkURL="mailto:info@cobaltweb.tech"
          isArrowVisible={true}
          ><Icon
            name="Envelope"
            class="size-6 text-slate-600 dark:text-slate-200"
          />
        </ContactIconBlock>
      </div>
    </div>
  </div>
</section>
<!-- Initialize Turnstile widget and process form submission on client side -->
<script>
  document.addEventListener("astro:page-load", () => {
    //Render the CF Turnstile widget
    const turnstileContainer = document.getElementById("turnstile-widget");
    if (turnstileContainer && !turnstileContainer.hasChildNodes()) {
      const tsSiteKey = turnstileContainer.getAttribute("data-sitekey");

      if (typeof turnstile !== "undefined") {
        turnstile.render("#turnstile-widget", {
          sitekey: tsSiteKey,
        });
      } else {
        console.error("Turnstile not loaded");
      }
    }
    // Get the form and error message div container
    const form = document.getElementById("contact-form") as HTMLFormElement;
    const errorMessageContainer = document.getElementById(
      "error-message",
    ) as HTMLDivElement;

    const displayError = (message: string) => {
      if (errorMessageContainer) {
        errorMessageContainer.textContent = message;
        errorMessageContainer.classList.remove("hidden");
        errorMessageContainer.classList.add("block");
      }
      console.log("Error displayed:", message);
    };

    const isValidEmail = (email: string) => {
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      return emailRegex.test(email);
    };

    if (form) {
      form.addEventListener("submit", async (e) => {
        e.preventDefault();

        const formData = new FormData(form);
        const emailInput = form.querySelector(
          'input[name="email"]',
        ) as HTMLInputElement;
        const email = emailInput ? emailInput.value : "";

        // Client-side email validation
        if (!isValidEmail(email)) {
          displayError("ERROR: Please enter a valid email address.");
          return;
        }

        // Check if Turnstile is ready
        const turnstileToken = formData.get("cf-turnstile-response");
        if (!turnstileToken) {
          displayError("ERROR: Please complete verification above.");
          return; // Stop submission
        }

        try {
          const response = await fetch("/api/sendEmailContact", {
            method: "POST",
            body: JSON.stringify(Object.fromEntries(formData)),
            headers: {
              "Content-Type": "application/json",
            },
          });

          const contentType = response.headers.get("content-type");

          if (contentType && contentType.includes("application/json")) {
            const result = await response.json();

            if (result.success) {
              console.log("Form submission successful. Redirecting...");
              window.location.href = result.redirectUrl; // Redirect on success
            } else {
              displayError(result.error || "ERROR: An error occurred");
              turnstile.reset();
            }
          } else {
            displayError(
              "ERROR: Server responded with an unexpected content type.",
            );
          }
        } catch (error) {
          console.error("Error:", error);
          displayError(
            error instanceof Error
              ? error.message
              : "ERROR: An unexpected error occurred. Please try again later.",
          );
          turnstile.reset();
        }
      });
    }
  });
</script>
